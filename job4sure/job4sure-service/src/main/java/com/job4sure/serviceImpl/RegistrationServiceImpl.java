package com.job4sure.serviceImpl;

import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import java.util.GregorianCalendar;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
import org.springframework.security.crypto.password.PasswordEncoder;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.job4sure.model.Registration;
import com.job4sure.repository.RegistrationRepository;
import com.job4sure.service.RegistrationService;
import com.job4sure.util.AutoGenratedPassword;
import com.job4sure.util.SendMail;

@Service
public class RegistrationServiceImpl implements RegistrationService {

	@Autowired
	private RegistrationRepository registrationRepository;
	
	@Transactional
	public boolean saveUserInformation(Registration registration) throws Exception {
			Calendar c = new GregorianCalendar();
		c.add(Calendar.DATE, 30);
		Date date = c.getTime();
		  SimpleDateFormat date1 = new SimpleDateFormat("yyyy-MM-dd hh:mm:ss");
		  String strDate = date1.format(date);
		 registration.setValidUpTo(strDate);
		PasswordEncoder passwordEncoder = new BCryptPasswordEncoder();
		  String password = registration.getPassword();
		  password = passwordEncoder.encode(password);
		 registration.setEnabled(0);
		 registration.setEncripted(password);
		Registration userregistration = registrationRepository.save(registration);
		Integer registrationId = userregistration.getRegistrationId();
		  String id = Integer.toString(registrationId);
		 String autoGeneratedPassword = AutoGenratedPassword.encrypt(id);
		if(userregistration!=null){
			SendMail.mailSend(userregistration.getEmail(),
					userregistration.getFullName(), userregistration.getRegistrationId(),autoGeneratedPassword);
		}
		return true;
	}

	public Registration verifyUser(Integer registrationId) {
		Registration registration = registrationRepository.verifyUser(registrationId);
		registration.setEnabled(1);
		registrationRepository.save(registration);
		return registration;
	}

	public Registration getLoggedInUserInfo(String userName) {
		Registration registration =	registrationRepository.getLoggedInUserInfo(userName);
		return registration;
	}

	/*public List getLoggedInUserInfo(String userName) {
		List userInfoList=null;
	//	userInfoList=registrationRepository.getLoggedInUserInfo(userName);
		return userInfoList;
	}*/
}
